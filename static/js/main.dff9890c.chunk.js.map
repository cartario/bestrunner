{"version":3,"sources":["components/header.jsx","const.js","utils.js","history.js","local-storage.js","reducer.js","components/edit-delete-session.jsx","components/session.jsx","components/sessions.jsx","components/filter.jsx","components/chart.jsx","components/main.jsx","components/footer.jsx","components/create-session.jsx","components/preloader.jsx","components/app.jsx","serviceWorker.js","api.js","reducers.js","index.js"],"names":["Wrapper","styled","header","props","theme","font","Nav","nav","primary","Logo","div","secondary","mobile","Menu","Header","Pages","SortType","TypeNames","extend","oldData","newData","Object","assign","getDateFormat","date","getDate","value","getMonth","getFullYear","adapter","data","id","type","Date","distance","comment","sort","sortType","list","a","b","getUniq","sessions","Set","map","session","history","createBrowserHistory","getItems","JSON","parse","localStorage","getItem","err","setItem","key","store","stringify","setItems","items","removeItem","createStoreStructure","reduce","acc","current","parsedSessionsFromStorage","values","initialState","isDataReady","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","checkSession","filter","catch","connect","state","SESSIONS","editSession","deleteSession","buttonLabel","className","useState","modal","setModal","setDistance","setComment","setDate","setType","isDeleting","setDeleting","toggle","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","FormGroup","Label","for","Input","name","defaultValue","onChange","target","placeholder","style","marginLeft","Session","li","Type","p","span","Distance","Info","List","ul","pink","Sessions","filteredSessions","length","Select","select","Item","width","toggleSortUp","filterType","setFilterType","isShowing","setShowing","stopPropagation","section","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","scales","yAxes","ticks","beginAtZero","main","Title","h1","button","Main","sortUp","setSortUp","sortTarget","setSortTarget","getSortedSessions","slice","textContent","toLowerCase","to","footer","LinkItem","Footer","href","ErrorField","initialValues","validationSchema","yup","required","min","max","createSession","setSubmitting","resetForm","Math","floor","random","errors","touched","isSubmitting","handleChange","handleBlur","handleSubmit","onBlur","valid","disabled","Spinner","bgc","newSession","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","reducers","combineReducers","action","goBack","index","findIndex","newSessions","sessionsFiltered","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.dff9890c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.header`  \n  text-align: center;\n  font-family: ${props=>props.theme.font};  \n`;\n\nconst Nav = styled.nav`\n  display: flex;  \n  color: white; \n  cursor: pointer; \n  background-color: ${props=>props.theme.primary};  \n`;\n\nconst Logo = styled.div`\n  width: 10%;\n  padding: 10px;\n  border: 1px solid white;  \n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n  \n  @media (max-width: ${props=>props.theme.mobile}) {\n    display: none;    \n`;\n\nconst Menu = styled.div`\n  width: 90%;\n  padding: 10px;\n  font-weight: bold;\n  border: 1px solid white;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n    \n  @media (max-width: ${props=>props.theme.mobile}){\n    width: 100%;\n    padding: 20px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Nav>\n        <Logo>[Logo]</Logo>\n        <Menu>[BEST RUNNER]</Menu>\n      </Nav>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","export const Pages = {\n  MAIN: `/`,\n  NEW: `new`,\n};\n\nexport const SortType = {\n  ALL: `Все`,\n  DATE: `date`,\n  TYPE: `type`,\n  DISTANCE_UP: `DISTANCE_UP`,\n  DISTANCE_DOWN: `DISTANCE_DOWN`,\n  DATE_UP: `DATE_UP`,\n  DATE_DOWN: `DATE_DOWN`,\n};\n\nexport const TypeNames = [`Велосипед`, `Бег`, `Лыжи`, `Плавание`, `Ходьба`];\n","import {SortType} from './const'; \n\nexport const extend = (oldData, newData) => {\n  return Object.assign({}, oldData, newData);\n};\n\nexport const getMonthName = (value) => [`ЯНВ`,`ФЕВ`,`МАР`,`АПР`,`МАЙ`,`ИЮН`,`ИЮЛ`,`АВГ`,`СЕН`,`ОКТ`,`НОЯ`,`ДЕК`][value];\n\nexport const getDateFormat = (date) => {\n  return `${date.getDate()} ${getMonthName(date.getMonth())} ${date.getFullYear()}`;\n};\n\nexport const adapter = (data) => {\n  return [{  \n    id: data[0].id,  \n    type: `servCheck`,\n    date: new Date(),\n    distance: 1,\n    comment: `Мои данные с сервера`,\n  }];\n};\n\nexport const parseItemFromStorage = (data) => {\n  return {  \n    id: data.id,  \n    type: data.type,\n    date: new Date(data.date),\n    distance: data.distance,\n    comment: data.comment,\n  };\n};\n\nexport const getRandomInt = (min, max)=> {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nexport const sort = (sortType, list) => {\n  switch(sortType){\n    case SortType.DISTANCE_UP:\n      return list.sort((a, b) => a.distance - b.distance);\n    case SortType.DISTANCE_DOWN:\n      return list.sort((a, b) => b.distance - a.distance);\n    case SortType.DATE_UP:\n      return list.sort((a, b) => a.date - b.date);\n    case SortType.DATE_DOWN:\n      return list.sort((a, b) => b.date - a.date);\n    default:\n      return list;\n  }\n};\n\nexport const getSortedSessions = (sortTarget, sortUp, sessions) => {  \n  if(sortTarget === SortType.DATE || sortTarget === SortType.TYPE){    \n    return  sortUp ? sort(SortType.DATE_UP, sessions) : sort(SortType.DATE_DOWN, sessions);\n  }\n  return  sortUp ? sort(SortType.DISTANCE_UP, sessions) : sort(SortType.DISTANCE_DOWN, sessions);\n};\n\nexport const getUniq = (sessions) => {  \n  return [...new Set(sessions.map((session)=>session.type))];\n};\n\n","import {createBrowserHistory} from \"history\";\n\nexport const history = createBrowserHistory();\n","export const getItems = () => {\n  try {\n    return JSON.parse(localStorage.getItem(`DATA`)) || {};\n  } catch (err) {\n    return {};\n  }\n}\n\nexport const setItem = (key, value) => {\n  const store = getItems();\n  localStorage.setItem(`DATA`,\n      JSON.stringify(Object.assign({}, store, {[key]: value}))\n  );\n}\n\nexport const setItems= (items)=> {\n  localStorage.setItem(\n      `DATA`,\n      JSON.stringify(items)\n  );\n}\n\nexport const removeItem=(key)=> {\n  const store = getItems();\n  delete store[key];\n  localStorage.setItem(`DATA`, JSON.stringify(store)\n  );\n}\n\n","import {extend, adapter, parseItemFromStorage} from './utils.js';\nimport {history} from \"./history.js\";\nimport {getItems, setItem, setItems, removeItem} from './local-storage';\n\nconst createStoreStructure = (items) => {\n  return items.reduce((acc, current) => {\n    return Object.assign({}, acc, {\n      [current.id]: current,\n    });\n  }, {});\n};\n\nconst storageSessions = Object.values(getItems());\nconst parsedSessionsFromStorage = storageSessions.map((session)=>parseItemFromStorage(session));\n\nconst initialState = {\n  isDataReady: false,\n  sessions: [],\n};\n\nconst ActionType = {\n  IS_DATA_READY: `IS_DATA_READY`,\n  LOAD_SESSIONS: `LOAD_SESSIONS`,\n  CREATE_SESSION: `CREATE_SESSION`,\n  EDIT_SESSION: `EDIT_SESSION`,\n  DELETE_SESSION: `DELETE_SESSION`,\n};\n\nexport const ActionCreator = {\n  setIsDataReady: (value) => ({\n    type: `IS_DATA_READY`,\n    payload: value,\n  }),  \n  loadSessions: (sessions) => ({\n    type: ActionType.LOAD_SESSIONS,\n    payload: sessions,\n  }),\n  createSession: (session) => ({\n    type: ActionType.CREATE_SESSION,\n    payload: session,\n  }), \n  editSession: (session) => ({\n    type: ActionType.EDIT_SESSION,\n    payload: session,\n  }), \n  deleteSession: (id) => ({\n    type: ActionType.DELETE_SESSION,\n    payload: id,\n  }), \n};\n\nexport const Operation = {\n  loadSessions: () => (dispatch, getState, api) => {    \n    return api.get(`/users?page=2`).then((response) => {\n      const checkSession = adapter(response.data.data)[0];\n      setItem(checkSession.id, checkSession);\n      dispatch(ActionCreator.loadSessions(adapter(response.data.data)));      \n      dispatch(ActionCreator.loadSessions(parsedSessionsFromStorage.filter((session)=>session.id!==checkSession.id)));\n      dispatch(ActionCreator.setIsDataReady(true));                \n    })\n    .catch((err) => {      \n      throw err;\n    });\n  }, \n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case ActionType.IS_DATA_READY:\n    return extend(state, {isDataReady: action.payload});\n\n  case ActionType.LOAD_SESSIONS:    \n    return extend(state, {sessions: [...state.sessions, ...action.payload]});\n\n  case ActionType.CREATE_SESSION:       \n    setItem(action.payload.id, action.payload); //storage    \n    history.goBack(); \n    return extend(state, {sessions: [...state.sessions, action.payload]});\n\n  case ActionType.EDIT_SESSION:\n      const editSession = action.payload;\n      const index = state.sessions.findIndex((session) => session.id === editSession.id);\n\n      if(index === -1){\n        return false;\n      }\n\n      const newSessions = [...state.sessions.slice(0, index), editSession, ...state.sessions.slice(index + 1)];     \n      setItems(createStoreStructure(newSessions)); //storage      \n    return extend(state, {sessions: newSessions});\n\n  case ActionType.DELETE_SESSION:\n    \n    removeItem(action.payload); //storage\n    const sessionsFiltered = state.sessions.filter((session)=>session.id!==action.payload)  \n    return extend(state, {sessions: sessionsFiltered});\n\n    default:\n      return state;\n  }\n};\n","import React, {useState} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {getDateFormat, getUniq} from '../utils';\nimport { connect } from 'react-redux';\nimport {ActionCreator} from '../reducer';\n\nconst EditSession = (props) => {\n  const {\n    buttonLabel,\n    className,\n    session,\n    editSession,\n    deleteSession,\n    sessions\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [distance, setDistance] = useState(session.distance);\n  const [comment, setComment] = useState(session.comment);\n  const [date, setDate] = useState(session.date);\n  const [type, setType] = useState(session.type);\n  const [isDeleting, setDeleting] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onChangeDistance = (e) => {    \n    setDistance(e.target.value);\n  }\n\n  const onChangeDate = (e) => {    \n    setDate(new Date(e.target.value));\n  }\n\n  const onChangeComment = (e) => {    \n    setComment(e.target.value);\n  }\n\n  const onChangeType = (e) => {    \n    setType(e.target.value);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(isDeleting){      \n      deleteSession(session.id);\n      return;\n    }\n\n    editSession({\n      id: session.id,      \n      comment, date, distance, type\n    });\n  }\n\n  const onDeleting = () => {\n    setDeleting(true);\n    toggle();\n  }\n\n  return (\n    <div>\n      <Button color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Информация о тренировке: #{session.id} {session.type}</ModalHeader>\n        <ModalBody>                 \n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"type\">Тип тренировки</Label>\n              <Input \n                type=\"select\" \n                name=\"type\" \n                id=\"type\" \n                defaultValue={type}\n                onChange={onChangeType}>\n                {getUniq(sessions).filter((type)=>type !== `servCheck`).map((type)=>\n                <option key={type}>{type}</option>)}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"date\">Date: {getDateFormat(date)}</Label>\n              <Input\n                type=\"date\"\n                name=\"date\"\n                id=\"date\"\n                placeholder={date}\n                defaultValue={date}\n                onChange={onChangeDate}                            \n              />\n            </FormGroup>            \n            <FormGroup>\n              <Label for=\"distance\">Distance:</Label>\n              <Input type=\"number\" name=\"distance\" id=\"distance\" placeholder=\"distance\" \n              defaultValue={distance} onChange={onChangeDistance}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"comment\">Comment:</Label>\n              <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n              defaultValue={comment} onChange={onChangeComment}\n              />\n            </FormGroup>\n            <Button style={{marginLeft: `10px`}} type=\"submit\" color=\"success\" onClick={toggle}>Изменить</Button>\n            <Button style={{marginLeft: `10px`}} type=\"submit\" color=\"danger\" onClick={onDeleting}>Удалить</Button>\n            <Button style={{marginLeft: `10px`}} color=\"secondary\" onClick={toggle}>Cancel</Button>        \n          </Form>\n        </ModalBody>       \n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sessions: state.SESSIONS.sessions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  editSession(session) {\n    dispatch(ActionCreator.editSession(session));\n  },\n  deleteSession(id) {\n    dispatch(ActionCreator.deleteSession(id));\n  },\n});\n\nexport {EditSession};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditSession);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport EditSession from './edit-delete-session';\nimport {getDateFormat} from '../utils';\n\nconst Session = styled.li`\n  display: flex;\n  justify-content: space-between;  \n  min-height: 50px;\n  margin: 5px 0; \n  padding: 10px;\n  text-align: left;  \n  \n  color: ${props=>props.theme.secondary};\n  background-color: white;\n  \n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n\n  &:hover{\n    background-color: lightgrey;    \n  }\n`;\n\nconst Type = styled.p`\n  width: 25%;  \n  display: inline-block;  \n  margin: 0;  \n  border-radius: 5px;\n  color: black;  \n`;\n\nconst Date = styled.span`\n  display:block;  \n  width: 30%;\n  height: 17px;  \n  border-radius: 5px; \n  color: black;   \n`;\n\nconst Distance = styled(Type)`\n  width: 15%;\n`;\n\nconst Info = styled.div` \n  width: 30%;\n  text-align: center; \n`;\n\nexport default ({session}) => {\n  return (\n    <Session>      \n      <Type>{session.type}</Type>\n      <Date>{getDateFormat(session.date)}</Date>\n      <Distance>{session.distance}km</Distance>\n      <Info>        \n        <EditSession session={session} buttonLabel={`Подробнее`}/>\n      </Info>\n    </Session>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Session from './session';\n\nconst List = styled.ul`\n  margin:0;\n  padding:0;\n  list-style: none;\n`;\n\nconst Info = styled.div`\n  padding: 50px;\n  font-size: 30px;\n  background-color: ${props=> props.theme.pink};\n  color: white;\n`;\n\nconst Sessions = (props) => {\n  const {filteredSessions: sessions} = props;\n\n  return (\n    <List>\n    {sessions.length ? sessions.map((session)=><Session \n      key={session.id}\n      session={session}      \n      />) : <Info>Самое время добавить свою первую тренировку</Info>}       \n    </List>\n  );\n};\n\nexport default Sessions;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {getUniq} from '../utils';\n\nconst Select = styled.select`\n  margin-left: 10px;\n  border-radius: 5px;\n\n\n  @media (max-width: ${props=>props.theme.mobile}){\n    margin-top: 25px;\n    margin-left: 0;\n  }  \n`;\n\nconst List = styled.ul`\n  display: flex;  \n  width: 100%;\n  margin: 0px;  \n  padding: 10px;\n  box-sizing: border-box;\n  font-size: 18px;\n  font-weight: bold;\n  list-style: none;\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n`;\n\nconst Item = styled.li`\n  width: ${props=>props.width}%;  \n  color: grey;\n  cursor: pointer;\n  text-align: left;  \n\n  &:hover{\n    color: ${props=>props.theme.primary};\n  }\n\n  &:active{\n    color: ${props=>props.theme.secondary}\n  }\n`;\n\nexport default ({toggleSortUp, sessions, filterType, setFilterType}) => {\n  const [isShowing, setShowing] = useState(false);\n\n  return (\n    <List>          \n      <Item width={25} onClick={()=>setShowing(!isShowing)}>Type &rsaquo;\n      {isShowing&&\n        <Select value={filterType} onClick={(e)=>{e.stopPropagation()}} onChange={(e)=>{setFilterType(e.target.value)}}>\n          <option>Все</option>\n            {getUniq(sessions).map((type)=><option key={type}>{type}</option>)}\n        </Select>\n      }\n      </Item>\n      <Item width={30} onClick={toggleSortUp}>Date &uarr;&darr;</Item>\n      <Item width={35} onClick={toggleSortUp}>Distance &uarr;&darr;</Item>      \n    </List>\n  );\n};\n","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {getDateFormat} from '../utils';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  width: 50%;\n  margin: 0 auto;\n  padding: 10px;\n\n  @media (max-width: ${props=>props.theme.mobile}){\n    width: 100%;\n  }\n`;\n\nexport default ({filteredSessions})=>{\n  const state = {\n    labels: filteredSessions.map((session)=>getDateFormat(session.date)),\n    datasets: [\n      { \n        barPercentage: 1,         \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: filteredSessions.map((session)=>session.distance),        \n      }\n    ]\n  };\n  return (\n    <Wrapper>\n      <Bar       \n      data={state}\n      options={{\n        title:{\n          display: true,\n          text:'Статистика по километражу',\n          fontSize: 20\n        },\n        legend:{\n          display:false, \n        },        \n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,              \n            },            \n          }],          \n        }\n      }}\n    />\n    </Wrapper>\n  );\n};\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Sessions from './sessions';\nimport Filter from './filter';\nimport Chart from './chart';\nimport {Link} from 'react-router-dom';\nimport {getSortedSessions} from '../utils';\nimport {Pages, SortType} from '../const';\n\nconst Wrapper = styled.main`\n  text-align: center;\n  font-family: ${props=>props.theme.font}; \n  background-color: white; \n`;\n\nconst Title = styled.h1`\n  display: none;\n`;\n\nconst Button = styled.button`\n  position: fixed;  \n  z-index: 1;\n  bottom: 20px;\n  right: 30px;\n  display: block;\n  width: 100px;\n  height: 100px;\n  font-size: 50px;\n  background-color: ${props=>props.theme.pink};\n  outline: none;\n  border: none;\n  color: white;\n  border-radius: 50%;  \n  transition: 0.5s transform ease;\n\n  &:hover{\n    transform: scale(1.5);\n  }\n\n  &:active{\n    background-color: grey;\n  }\n`;\n\nconst Main = ({sessions}) => {\n  const [sortUp, setSortUp] = useState(true); \n  const [sortTarget, setSortTarget] = useState(SortType.DATE);\n  const [filterType, setFilterType] = useState(SortType.ALL);\n\n  let filteredSessions;\n  if(filterType === SortType.ALL){    \n    filteredSessions = sessions;\n  } else {\n    filteredSessions = sessions.filter((session)=> session.type===filterType);\n  }\n\n  const toggleSortUp = (e) => {\n    const target = e.target.textContent.toLowerCase();    \n    setSortUp(!sortUp);\n    setSortTarget(target);\n  };\n\n  const correctSortTarget = sortTarget.slice(0, sortTarget.length - 3); // поправка из-за спецсимволов\n  getSortedSessions(correctSortTarget, sortUp, filteredSessions);  \n  \n  return (\n  \n    <Wrapper>      \n      <Title>BestRunner</Title>\n      <Filter toggleSortUp={toggleSortUp} sessions = {sessions} filterType={filterType} setFilterType={setFilterType}/>\n      <Sessions filteredSessions = {filteredSessions}/>\n      <Chart filteredSessions={filteredSessions}/>      \n      <Link to={Pages.NEW}>\n        <Button>+</Button>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.footer` \n  text-align: center;\n  font-family: ${props=>props.theme.font};\n  background-color: ${props=>props.theme.primary};\n  color: white;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;  \n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  @media (max-width:${props=>props.theme.mobile}){\n    flex-direction: column;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 10px;\n  cursor: pointer;  \n`;\n\nconst LinkItem = styled.a`\n  color: white;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <List>\n        <Item>\n          <LinkItem href=\"https://wa.me/+79264915349\">[Copyright]</LinkItem>\n        </Item>\n        <Item>\n          <LinkItem href=\"https://wa.me/+79264915349\">[Контакты]</LinkItem>\n        </Item>\n        <Item>\n          <LinkItem href=\"https://wa.me/+79264915349\">[Обратная связь]</LinkItem>\n        </Item>\n      </List>\n    </Wrapper>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {getRandomInt} from '../utils';\nimport {TypeNames} from '../const';\n \nconst Wrapper = styled.div`\n  width: 80%;\n  margin: 10px auto;\n`;\n\nconst ErrorField = styled.div`\n  font-size: 14px;\n  color: red;\n\n  @keyframes shake {\n    0%,\n    100% {\n      transform: translateX(0);\n    }\n  \n    10%,\n    30%,\n    50%,\n    70%,\n    90% {\n      transform: translateX(-5px);\n    }\n  \n    20%,\n    40%,\n    60%,\n    80% {\n      transform: translateX(5px);\n    }\n  }\n\n  animation: shake 0.6s;  \n`;\n\nconst initialValues = {\n  distance: ``,\n  type: ``,\n  date: ``,\n  comment: ``,\n};\n\nconst validationSchema = yup.object({\n  comment: yup\n    .string()\n    .required(`Это поле обязательное`)\n    .min(5, `Минимум 5 символов`)\n    .max(255, `Достаточно)`),\n  type: yup.string().required(`Это поле обязательное`),\n  date: yup.date().required(`Это поле обязательное`),\n  distance: yup \n    .number().required(`Это поле обязательное`).min(0, `Должно быть больше нуля`).max(100, `Это уже перебор`)\n});\n\nexport default ({createSession}) => {\n  return (\n    <Wrapper>\n        <Link to=\"/\">Вернуться назад</Link>\n        <h2>Новая тренировка</h2>\n        <Formik \n          initialValues={initialValues}\n          validationSchema = {validationSchema}\n          onSubmit={(data, {setSubmitting, resetForm})=>{\n            setSubmitting(true);\n\n            createSession({\n              id: getRandomInt(1,100),\n              type: data.type,\n              distance: data.distance,\n              comment: data.comment,\n              date: new Date (data.date),\n            });\n\n            setSubmitting(false);\n            resetForm();\n        }}>\n          {({values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit})=>(\n            <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"type\">Type</Label>\n              <Input type=\"select\" name=\"type\" id=\"type\" value={values.type} onChange={handleChange} onBlur={handleBlur}\n              valid={!errors.type && touched.type}\n              > \n                <option></option>\n                {TypeNames.map((type)=><option key={type}>{type}</option>)}\n              </Input>          \n              {touched.type && errors.type && <ErrorField>{errors.type}</ErrorField>}\n            </FormGroup>          \n            <FormGroup>\n              <Label for=\"distance\">Distance, km</Label>\n              <Input type=\"number\" name=\"distance\" id=\"distance\" placeholder=\"distance\"\n              value={values.distance} onChange={handleChange} onBlur={handleBlur} valid={!errors.distance && touched.distance}/>\n              {touched.distance && errors.distance && <ErrorField>{errors.distance}</ErrorField>}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleDate\">Date</Label>\n              <Input\n                type=\"date\"\n                name=\"date\"\n                id=\"exampleDate\"\n                placeholder=\"date placeholder\"\n                value={values.date} onChange={handleChange} onBlur={handleBlur}\n                valid={!errors.date && touched.date}\n              />\n              {touched.date && errors.date && <ErrorField>{errors.date}</ErrorField>}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"comment\">Comment</Label>\n              <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n              value={values.comment} errors={errors.comment} onChange={handleChange} onBlur={handleBlur}\n              valid={!errors.comment && touched.comment}\n              />\n              {touched.comment && errors.comment && <ErrorField>{errors.comment}</ErrorField>}\n            </FormGroup>\n            <Button color=\"success\" disabled={isSubmitting}>Добавить тренировку</Button>\n          </Form>\n          )}\n        </Formik>\n      </Wrapper>\n  );\n};\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 45%;\n  left: 45%;\n\n`;\n\nexport default (props) => {\n  return (\n    <Wrapper>\n      <Spinner type=\"grow\" color=\"primary\" />\n      <p>Loading...</p>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport Header from './header';\nimport Main from './main'\nimport Footer from './footer';\nimport CreateSession from './create-session';\nimport Preloader from './preloader';\nimport { connect } from 'react-redux';\nimport {ActionCreator} from '../reducer';\nimport {history} from '../history.js';\n\nconst theme = {\n  primary: `#3B5AF5`,\n  secondary: `tomato`,\n  pink: `#F9057C`,\n  bgc: `white`,\n  mobile: `660px`,\n  font: `Poppins`,\n};\n\nconst App = (props) => {\n  const {isDataReady, sessions, createSession} = props;  \n  if (!isDataReady) {\n    return <Preloader/>;\n  }\n  \n  return (\n    <HashRouter history={history}>\n    <ThemeProvider theme={theme}>      \n        <Header/>\n        <Route exact path=\"/\">\n          <Main sessions = {sessions}/>\n        </Route>\n        <Route exact path=\"/new\">\n          <CreateSession createSession={createSession}/>\n        </Route>        \n        <Footer/>      \n    </ThemeProvider>\n    </HashRouter>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isDataReady: state.SESSIONS.isDataReady,\n  sessions: state.SESSIONS.sessions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createSession(newSession) {\n    dispatch(ActionCreator.createSession(newSession));\n  },\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: `https://reqres.in/api`,\n  timeout: 1000 * 5,\n  withCredentials: false,\n});\n","import {combineReducers} from \"redux\";\nimport {reducer} from \"./reducer.js\";\n\nexport const reducers = combineReducers({\n  SESSIONS: reducer,  \n}); \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport {api} from './api.js';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducers} from \"./reducers.js\";\nimport {Operation} from './reducer';\n\nconst store = createStore(\n  reducers, compose(\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nstore.dispatch(Operation.loadSessions());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}