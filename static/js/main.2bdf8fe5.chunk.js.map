{"version":3,"sources":["components/header.jsx","utils.js","mock.js","history.js","local-storage.js","reducer.js","components/edit-delete-session.jsx","components/session.jsx","components/sessions.jsx","components/filter.jsx","components/chart.jsx","components/main.jsx","components/footer.jsx","components/create-session.jsx","components/preloader.jsx","components/app.jsx","serviceWorker.js","api.js","reducers.js","index.js"],"names":["Wrapper","styled","header","props","theme","font","Nav","nav","primary","Logo","div","secondary","mobile","Menu","Header","extend","oldData","newData","Object","assign","getDateFormat","date","getDate","value","getMonth","getFullYear","sessions","id","type","Date","distance","comment","history","createBrowserHistory","getItems","JSON","parse","localStorage","getItem","err","setItem","key","store","stringify","setItems","items","removeItem","createStoreStructure","reduce","acc","current","parsedSessionsFromStorage","values","map","session","data","console","log","initialState","isDataReady","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","catch","connect","editSession","deleteSession","buttonLabel","className","useState","modal","setModal","setDistance","setComment","setDate","isDeleting","setDeleting","toggle","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","FormGroup","Label","for","Input","name","placeholder","defaultValue","onChange","target","style","marginLeft","Session","li","Type","p","span","Distance","Info","togglePopupHandler","List","ul","Sessions","showPopup","setShowPopup","setCurrentId","togglePopup","Item","width","margin","padding","minHeight","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","main","button","pink","Main","to","footer","Footer","state","_changeHandler","bind","_submitHandler","min","max","this","createSession","Math","floor","random","setState","required","React","Component","Spinner","bgc","SESSIONS","newSession","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","reducers","combineReducers","action","goBack","index","findIndex","newSessions","slice","sessionsFiltered","filter","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2bdf8fe5.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.header`  \n  text-align: center;\n  font-family: ${props=>props.theme.font};  \n`;\n\nconst Nav = styled.nav`\n  display: flex;  \n  color: white; \n  cursor: pointer; \n  background-color: ${props=>props.theme.primary};  \n\n  \n`;\n\nconst Logo = styled.div`\n  width: 10%;\n  padding: 10px;\n  border: 1px solid white;  \n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n  \n  @media (max-width: ${props=>props.theme.mobile}) {\n    display: none;    \n`;\n\nconst Menu = styled.div`\n  width: 90%;\n  padding: 10px;\n  font-weight: bold;\n  border: 1px solid white;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n    \n  @media (max-width: ${props=>props.theme.mobile}){\n    width: 100%;\n    padding: 20px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Nav>\n        <Logo>[Logo]</Logo>\n        <Menu>[BEST RUNNER]</Menu>\n      </Nav>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","export const extend = (oldData, newData) => {\n  return Object.assign({}, oldData, newData);\n};\n\nexport const getMonthName = (value) => [`ЯНВ`,`ФЕВ`,`МАР`,`АПР`,`МАЙ`,`ИЮН`,`ИЮЛ`,`АВГ`,`СЕН`,`ОКТ`,`НОЯ`,`ДЕК`][value];\n\nexport const getDateFormat = (date) => {\n  return `${date.getDate()} ${getMonthName(date.getMonth())} ${date.getFullYear()}`;\n};\n\nexport const adapter = (data) => {\n  return [{  \n    id: data[0].id,  \n    type: `servCheck`,\n    date: new Date(),\n    distance: 101,\n    comment: `you?Serv`,\n  }];\n};\n\nexport const parseItemFromStorage = (data) => {\n  return {  \n    id: data.id,  \n    type: data.type,\n    date: new Date(data.date),\n    distance: data.distance,\n    comment: data.comment,\n  };\n};\n\nexport const getRandomInt = (min, max)=> {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n","export const sessions = [\n  {\n    id: 1,\n    type: `Велосипед`,\n    date: new Date(),\n    distance: 10,\n    comment: `  type=\"password\"\n    name=\"password\"\n    id=\"examplePassword\"\n    placeholder=\"password placehold`\n  },\n  {\n    id: 2,\n    type: `Бег`,\n    date: new Date(),\n    distance: 15,\n  },\n  {\n    id: 3,\n    type: `Лыжи`,\n    date: new Date(),\n    distance: 5,\n  },\n  {\n    id: 4,\n    type: `Плавание`,\n    date: new Date(),\n    distance: 7,\n  },\n  {\n    id: 51,\n    type: `Ходьба`,\n    date: new Date(),\n    distance: 11,\n  }\n];\n","import {createBrowserHistory} from \"history\";\n\nexport const history = createBrowserHistory();\n","export const getItems = () => {\n  try {\n    return JSON.parse(localStorage.getItem(`DATA`)) || {};\n  } catch (err) {\n    return {};\n  }\n}\n\nexport const setItem = (key, value) => {\n  const store = getItems();\n  localStorage.setItem(`DATA`,\n      JSON.stringify(Object.assign({}, store, {[key]: value}))\n  );\n}\n\nexport const setItems= (items)=> {\n  localStorage.setItem(\n      `DATA`,\n      JSON.stringify(items)\n  );\n}\n\nexport const removeItem=(key)=> {\n  const store = getItems();\n  delete store[key];\n  localStorage.setItem(`DATA`, JSON.stringify(store)\n  );\n}\n\n","import {extend, adapter, parseItemFromStorage} from './utils.js';\nimport {sessions} from './mock';\nimport {history} from \"./history.js\";\nimport {getItems, setItem, setItems, removeItem} from './local-storage';\n\nconst createStoreStructure = (items) => {\n  return items.reduce((acc, current) => {\n    return Object.assign({}, acc, {\n      [current.id]: current,\n    });\n  }, {});\n};\n\nconst storageSessions = Object.values(getItems());\nconst parsedSessionsFromStorage = storageSessions.map((session)=>parseItemFromStorage(session));\n\n// localStorage.clear();\n// console.log(createStoreStructure(sessions));\nconsole.log(createStoreStructure(sessions));\n\nconst initialState = {\n  isDataReady: false,\n  sessions: [],\n};\n\nconst ActionType = {\n  IS_DATA_READY: `IS_DATA_READY`,\n  LOAD_SESSIONS: `LOAD_SESSIONS`,\n  CREATE_SESSION: `CREATE_SESSION`,\n  EDIT_SESSION: `EDIT_SESSION`,\n  DELETE_SESSION: `DELETE_SESSION`,\n};\n\nexport const ActionCreator = {\n  setIsDataReady: (value) => ({\n    type: `IS_DATA_READY`,\n    payload: value,\n  }),  \n  loadSessions: (sessions) => ({\n    type: ActionType.LOAD_SESSIONS,\n    payload: sessions,\n  }),\n  createSession: (session) => ({\n    type: ActionType.CREATE_SESSION,\n    payload: session,\n  }), \n  editSession: (session) => ({\n    type: ActionType.EDIT_SESSION,\n    payload: session,\n  }), \n  deleteSession: (id) => ({\n    type: ActionType.DELETE_SESSION,\n    payload: id,\n  }), \n};\n\nexport const Operation = {\n  loadSessions: () => (dispatch, getState, api) => {    \n    return api.get(`/users?page=2`).then((response) => {          \n      dispatch(ActionCreator.loadSessions(adapter(response.data.data)));      \n      dispatch(ActionCreator.loadSessions(parsedSessionsFromStorage));\n      dispatch(ActionCreator.setIsDataReady(true));                \n    })\n    .catch((err) => {      \n      throw err;\n    });\n  }, \n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case ActionType.IS_DATA_READY:\n    return extend(state, {isDataReady: action.payload});\n\n  case ActionType.LOAD_SESSIONS:    \n    // setItems(createStoreStructure([...state.sessions, ...action.payload]));   \n    \n    return extend(state, {sessions: [...state.sessions, ...action.payload]});\n\n  case ActionType.CREATE_SESSION:\n    // setItems(action.payload);\n    \n    setItem(action.payload.id, action.payload);\n    \n    history.goBack(); \n    return extend(state, {sessions: [...state.sessions, action.payload]});\n\n  case ActionType.EDIT_SESSION:\n      const editSession = action.payload;\n      const index = state.sessions.findIndex((session) => session.id === editSession.id);\n\n      if(index === -1){\n        return false;\n      }\n\n      const newSessions = [...state.sessions.slice(0, index), editSession, ...state.sessions.slice(index + 1)];\n\n     debugger;\n      setItems(createStoreStructure(newSessions));\n      \n    return extend(state, {sessions: newSessions});\n\n  case ActionType.DELETE_SESSION:\n    \n    removeItem(action.payload); //storage\n    const sessionsFiltered = state.sessions.filter((session)=>session.id!==action.payload)  \n    return extend(state, {sessions: sessionsFiltered});\n\n    default:\n      return state;\n  }\n};\n","import React, {useState} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\nimport styled from 'styled-components';\nimport {getDateFormat} from '../utils';\nimport { connect } from 'react-redux';\nimport {ActionCreator} from '../reducer';\n\nconst EditSession = (props) => {\n  const {\n    buttonLabel,\n    className,\n    session,\n    editSession,\n    deleteSession\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [distance, setDistance] = useState(session.distance);\n  const [comment, setComment] = useState(session.comment);\n  const [date, setDate] = useState(session.date);\n  const [isDeleting, setDeleting] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onChangeDistance = (e) => {    \n    setDistance(e.target.value);\n  }\n\n  const onChangeDate = (e) => {    \n    setDate(new Date(e.target.value));\n  }\n\n  const onChangeComment = (e) => {    \n    setComment(e.target.value);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(isDeleting){      \n      deleteSession(session.id);\n      return;\n    }\n\n    editSession({\n      id: session.id,\n      type: session.type,\n      comment, date, distance\n    });\n  }\n\n  const onDeleting = () => {\n    setDeleting(true);\n    toggle();\n  }\n\n  return (\n    <div>\n      <Button color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Информация о тренировке: #{session.id} {session.type}</ModalHeader>\n        <ModalBody>                 \n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"date\">Date: {getDateFormat(date)}</Label>\n              <Input\n                type=\"date\"\n                name=\"date\"\n                id=\"date\"\n                placeholder={date}\n                defaultValue={date}\n                onChange={onChangeDate}                            \n              />\n            </FormGroup>            \n            <FormGroup>\n              <Label for=\"distance\">Distance:</Label>\n              <Input type=\"number\" name=\"distance\" id=\"distance\" placeholder=\"distance\" \n              defaultValue={distance} onChange={onChangeDistance}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"comment\">Comment:</Label>\n              <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n              defaultValue={comment} onChange={onChangeComment}\n              />\n            </FormGroup>\n            <Button style={{marginLeft: `10px`}} type=\"submit\" color=\"success\" onClick={toggle}>Изменить</Button>\n            <Button style={{marginLeft: `10px`}} type=\"submit\" color=\"danger\" onClick={onDeleting}>Удалить</Button>\n            <Button style={{marginLeft: `10px`}} color=\"secondary\" onClick={toggle}>Cancel</Button>        \n          </Form>\n        </ModalBody>       \n      </Modal>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  editSession(session) {\n    dispatch(ActionCreator.editSession(session));\n  },\n  deleteSession(id) {\n    dispatch(ActionCreator.deleteSession(id));\n  },\n});\n\nexport {EditSession};\nexport default connect(null, mapDispatchToProps)(EditSession);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport EditSession from './edit-delete-session';\nimport {getDateFormat} from '../utils';\n\nconst Session = styled.li`\n  display: flex;\n  justify-content: space-between;  \n  min-height: 50px;\n  margin: 5px 0; \n  padding: 10px;\n  text-align: left;  \n  \n  color: ${props=>props.theme.secondary};\n  background-color: white;\n  \n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n\n  &:hover{\n    background-color: lightgrey;    \n  }\n`;\n\nconst Type = styled.p`\n  width: 25%;  \n  display: inline-block;  \n  margin: 0;  \n  border-radius: 5px;\n  color: black;  \n`;\n\nconst Date = styled.span`\n  display:block;  \n  width: 30%;\n  height: 17px;  \n  border-radius: 5px; \n  color: black;   \n`;\n\nconst Distance = styled(Type)`\n  width: 15%;\n`;\n\nconst Info = styled.div` \n  width: 30%;\n  text-align: center; \n`;\n\nexport default ({session, togglePopupHandler}) => {\n  return (\n    <Session>      \n      <Type>{session.type}</Type>\n      <Date>{getDateFormat(session.date)}</Date>\n      <Distance>{session.distance}km</Distance>\n      <Info onClick={()=>togglePopupHandler(session.id)}>        \n        <EditSession session={session} buttonLabel={`Подробнее`}/>\n      </Info>\n    </Session>\n  );\n};\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Session from './session';\n\nconst List = styled.ul`\n  margin:0;\n  padding:0;\n  list-style: none;\n`;\n\nconst Sessions = (props) => {\n  const {sessions} = props;\n  const [showPopup, setShowPopup] = useState(false);\n  const [currentId, setCurrentId] = useState(0);\n  \n  const togglePopup = (id) => {\n    setShowPopup(!showPopup);\n    setCurrentId(id);\n  };\n\n  return (\n    <List>\n    {sessions.map((session)=><Session \n      key={session.id}\n      session={session}\n      togglePopupHandler = {togglePopup}\n      />)}       \n  </List>\n  );\n};\n\nexport default Sessions;\n\n// {showPopup && <Form currentId={currentId} sessions={sessions} togglePopupHandler = {()=>togglePopup(currentId)}/>}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;  \n  width: 100%;\n  margin: 0px;  \n  padding: 10px;\n  box-sizing: border-box;\n  font-size: 18px;\n  font-weight: bold;\n  list-style: none;\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n`;\n\nconst Item = styled.li`\n  width: ${props=>props.width}%;  \n  color: grey;\n  cursor: pointer;\n  text-align: left;  \n\n  &:hover{\n    color: ${props=>props.theme.primary};\n  }\n\n  &:active{\n    color: ${props=>props.theme.secondary}\n  }\n`;\n\nexport default (props) => {\n  return (\n    <List>      \n      <Item width={25}>Type</Item>\n      <Item width={30}>Date</Item>\n      <Item width={15}>Distance</Item>      \n    </List>\n  );\n};\n","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nexport default (props)=>{\n\n\n  const state = {\n    labels: [`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`],\n    datasets: [\n      { \n        barPercentage: 0.5,         \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: [1,2,3,4,5],\n      }\n    ]\n  };\n  return (\n    <section \n    style={{margin:0, padding: `20px`,minHeight: `280px`}}>\n      <Bar       \n      data={state}\n      options={{\n        title:{\n          display: true,\n          text:'Сводные данные за текущий период',\n          fontSize: 20\n        },\n        legend:{\n          display:false, \n        },        \n      }}\n    />\n    </section>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Sessions from './sessions';\nimport Filter from './filter';\nimport Chart from './chart';\nimport {Link} from 'react-router-dom';\n\n\nconst Wrapper = styled.main`\n  text-align: center;\n  font-family: ${props=>props.theme.font}; \n  background-color: white; \n`;\n\nconst Button = styled.button`\n  position: fixed;  \n  z-index: 1;\n  bottom: 20px;\n  right: 30px;\n  display: block;\n  width: 100px;\n  height: 100px;\n  font-size: 50px;\n  background-color: ${props=>props.theme.pink};\n  outline: none;\n  border: none;\n  color: white;\n  border-radius: 50%;  \n  transition: 0.5s transform ease;\n\n  &:hover{\n    transform: scale(1.5);\n  }\n\n  &:active{\n    background-color: grey;\n  }\n`;\n\nconst Main = ({sessions}) => {\n  \n  return (\n    <Wrapper>\n      <h1 style={{display: `none`}}>BestRunner</h1>\n      <Filter/>\n      <Sessions sessions = {sessions}/>\n      <Chart/>      \n      <Link to=\"/new\">\n        <Button>+</Button>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.footer` \n  text-align: center;\n  font-family: ${props=>props.theme.font};\n  background-color: ${props=>props.theme.primary};\n  color: white;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;  \n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  @media (max-width:${props=>props.theme.mobile}){\n    flex-direction: column;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <List>\n        <Item>[Copyright]</Item>\n        <Item>[Социальные сети]</Item>\n        <Item>[Адрес]</Item>\n      </List>\n    </Wrapper>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {getRandomInt} from '../utils';\n \nconst Wrapper = styled.div`\n  width: 80%;\n  margin: 10px auto;\n`;\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      id: 100,\n      type: `Велосипед`,\n      distance: ``,\n      comment: ``,\n      date: new Date(),\n    };\n    this._changeHandler = this._changeHandler.bind(this);\n    this._submitHandler = this._submitHandler.bind(this);    \n  }\n\n  _submitHandler(e){\n    e.preventDefault();\n    this.props.createSession({\n      id: getRandomInt(1,100),\n      type: this.state.type,\n      distance: this.state.distance,\n      comment: this.state.comment,\n      date: new Date(),\n    })    \n  }\n\n  _changeHandler(e){\n    const name= e.target.name;    \n    this.setState({\n      [name]: e.target.value,\n    })    \n  }\n\n  render() {    \n    return (\n      <Wrapper>\n        <Link to=\"/\">Вернуться назад</Link>\n        <h2>Новая тренировка</h2>\n        <Form onSubmit={this._submitHandler}>\n          <FormGroup>\n            <Label for=\"type\">Type</Label>\n            <Input type=\"select\" name=\"type\" id=\"type\" defaultValue={this.state.type} onChange={this._changeHandler}>\n              <option>Велосипед</option>\n              <option>Бег</option>\n              <option>Лыжи</option>\n              <option>Плавание</option>\n              <option>Ходьба</option>\n            </Input>\n          </FormGroup>          \n          <FormGroup>\n            <Label for=\"distance\">Distance, km</Label>\n            <Input type=\"number\" min=\"0\" name=\"distance\" id=\"distance\" placeholder=\"distance\" required\n            value={this.state.distance} onChange={this._changeHandler}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleDate\">Date</Label>\n            <Input\n              type=\"date\"\n              name=\"date\"\n              id=\"exampleDate\"\n              placeholder=\"date placeholder\"\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"comment\">Comment</Label>\n            <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n            value={this.state.comment} onChange={this._changeHandler}\n            />\n          </FormGroup>\n          <Button color=\"success\">Добавить тренировку</Button>\n        </Form>\n      </Wrapper>\n    );\n  }\n};\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport default (props) => {\n  return (\n    <div>\n      <Spinner type=\"grow\" color=\"primary\" />\n      <p>Loading...</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport Header from './header';\nimport Main from './main'\nimport Footer from './footer';\nimport CreateSession from './create-session';\nimport Preloader from './preloader';\nimport { connect } from 'react-redux';\nimport {ActionCreator, Operation} from '../reducer';\nimport {history} from '../history.js';\n\nconst theme = {\n  primary: `#3B5AF5`,\n  secondary: `tomato`,\n  pink: `#F9057C`,\n  bgc: `white`,\n  mobile: `660px`,\n  font: `Poppins`,\n};\n\nconst App = (props) => {\n  const {isDataReady, sessions, createSession} = props;  \n  if (!isDataReady) {\n    return <Preloader/>;\n  }\n  \n  return (\n    <HashRouter history={history}>\n    <ThemeProvider theme={theme}>      \n        <Header/>\n        <Route exact path=\"/\">\n          <Main sessions = {sessions}/>\n        </Route>\n        <Route exact path=\"/new\">\n          <CreateSession createSession={createSession}/>\n        </Route>        \n        <Footer/>      \n    </ThemeProvider>\n    </HashRouter>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isDataReady: state.SESSIONS.isDataReady,\n  sessions: state.SESSIONS.sessions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createSession(newSession) {\n    dispatch(ActionCreator.createSession(newSession));\n  },\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: `https://reqres.in/api`,\n  timeout: 1000 * 5,\n  withCredentials: false,\n});\n","import {combineReducers} from \"redux\";\nimport {reducer} from \"./reducer.js\";\n\nexport const reducers = combineReducers({\n  SESSIONS: reducer,  \n}); \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport {api} from './api.js';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducers} from \"./reducers.js\";\nimport {ActionCreator, Operation} from './reducer';\nimport {getItems, setItem, setItems, removeItem} from './local-storage';\n\n// localStorage.clear();\n\nconst store = createStore(\n  reducers, compose(\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nconst localStorageSessions = [{\n  id: 41,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 8,\n  comment: `heyLocal`,\n},{\n  id: 42,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 9,\n  comment: `howLocal`,\n},{\n  id: 43,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 10,\n  comment: `areLocal`,\n}];\n\nstore.dispatch(Operation.loadSessions());\n// store.dispatch(ActionCreator.loadSessions(localStorageSessions));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}