{"version":3,"sources":["components/header.jsx","utils.js","mock.js","history.js","local-storage.js","reducer.js","components/edit-delete-session.jsx","components/session.jsx","components/sessions.jsx","components/filter.jsx","components/chart.jsx","components/main.jsx","components/footer.jsx","components/create-session.jsx","components/preloader.jsx","components/app.jsx","serviceWorker.js","api.js","reducers.js","index.js"],"names":["Wrapper","styled","header","props","theme","font","Nav","nav","primary","Logo","div","secondary","mobile","Menu","Header","extend","oldData","newData","Object","assign","getDateFormat","date","getDate","value","getMonth","getFullYear","adapter","data","id","type","Date","distance","comment","SortType","sort","sortType","list","a","b","getUniq","sessions","Set","map","session","history","createBrowserHistory","getItems","JSON","parse","localStorage","getItem","err","setItem","key","store","stringify","setItems","items","removeItem","createStoreStructure","reduce","acc","current","parsedSessionsFromStorage","values","initialState","isDataReady","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","checkSession","filter","catch","connect","state","SESSIONS","editSession","deleteSession","buttonLabel","className","useState","modal","setModal","setDistance","setComment","setDate","setType","isDeleting","setDeleting","toggle","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","FormGroup","Label","for","Input","name","defaultValue","onChange","target","placeholder","style","marginLeft","Session","li","Type","p","span","Distance","Info","togglePopupHandler","List","ul","Sessions","showPopup","setShowPopup","setCurrentId","togglePopup","Select","select","Item","width","toggleSortUp","filterType","setFilterType","isShowing","setShowing","stopPropagation","section","filteredSessions","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","scales","yAxes","ticks","beginAtZero","main","button","pink","Main","sortUp","setSortUp","sortTarget","setSortTarget","getSortedSessions","textContent","toLowerCase","to","footer","LinkItem","Footer","href","_changeHandler","bind","_submitHandler","min","max","this","createSession","Math","floor","random","setState","required","React","Component","Spinner","bgc","newSession","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","reducers","combineReducers","action","goBack","index","findIndex","newSessions","slice","sessionsFiltered","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.1ac3fc8f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.header`  \n  text-align: center;\n  font-family: ${props=>props.theme.font};  \n`;\n\nconst Nav = styled.nav`\n  display: flex;  \n  color: white; \n  cursor: pointer; \n  background-color: ${props=>props.theme.primary};  \n\n  \n`;\n\nconst Logo = styled.div`\n  width: 10%;\n  padding: 10px;\n  border: 1px solid white;  \n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n  \n  @media (max-width: ${props=>props.theme.mobile}) {\n    display: none;    \n`;\n\nconst Menu = styled.div`\n  width: 90%;\n  padding: 10px;\n  font-weight: bold;\n  border: 1px solid white;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n    \n  @media (max-width: ${props=>props.theme.mobile}){\n    width: 100%;\n    padding: 20px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Nav>\n        <Logo>[Logo]</Logo>\n        <Menu>[BEST RUNNER]</Menu>\n      </Nav>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","export const extend = (oldData, newData) => {\n  return Object.assign({}, oldData, newData);\n};\n\nexport const getMonthName = (value) => [`ЯНВ`,`ФЕВ`,`МАР`,`АПР`,`МАЙ`,`ИЮН`,`ИЮЛ`,`АВГ`,`СЕН`,`ОКТ`,`НОЯ`,`ДЕК`][value];\n\nexport const getDateFormat = (date) => {\n  return `${date.getDate()} ${getMonthName(date.getMonth())} ${date.getFullYear()}`;\n};\n\nexport const adapter = (data) => {\n  return [{  \n    id: data[0].id,  \n    type: `servCheck`,\n    date: new Date(),\n    distance: 1,\n    comment: `you?Serv`,\n  }];\n};\n\nexport const parseItemFromStorage = (data) => {\n  return {  \n    id: data.id,  \n    type: data.type,\n    date: new Date(data.date),\n    distance: data.distance,\n    comment: data.comment,\n  };\n};\n\nexport const getRandomInt = (min, max)=> {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nexport const SortType = {\n  DISTANCE_UP: `DISTANCE_UP`,\n  DISTANCE_DOWN: `DISTANCE_DOWN`,\n  DATE_UP: `DATE_UP`,\n  DATE_DOWN: `DATE_DOWN`,\n};\n\nexport const sort = (sortType, list) => {\n  switch(sortType){\n    case SortType.DISTANCE_UP:\n      return list.sort((a, b) => a.distance - b.distance);\n    case SortType.DISTANCE_DOWN:\n      return list.sort((a, b) => b.distance - a.distance);\n    case SortType.DATE_UP:\n      return list.sort((a, b) => a.date - b.date);\n    case SortType.DATE_DOWN:\n      return list.sort((a, b) => b.date - a.date);\n    default:\n      return list;\n  }\n};\n\nexport const getUniq = (sessions) => {\n  \n  return [...new Set(sessions.map((session)=>session.type))];\n};\n\n","export const sessions = [\n  {\n    id: 1,\n    type: `Велосипед`,\n    date: new Date(),\n    distance: 10,\n    comment: `  type=\"password\"\n    name=\"password\"\n    id=\"examplePassword\"\n    placeholder=\"password placehold`\n  },\n  {\n    id: 2,\n    type: `Бег`,\n    date: new Date(),\n    distance: 15,\n  },\n  {\n    id: 3,\n    type: `Лыжи`,\n    date: new Date(),\n    distance: 5,\n  },\n  {\n    id: 4,\n    type: `Плавание`,\n    date: new Date(),\n    distance: 7,\n  },\n  {\n    id: 51,\n    type: `Ходьба`,\n    date: new Date(),\n    distance: 11,\n  }\n];\n","import {createBrowserHistory} from \"history\";\n\nexport const history = createBrowserHistory();\n","export const getItems = () => {\n  try {\n    return JSON.parse(localStorage.getItem(`DATA`)) || {};\n  } catch (err) {\n    return {};\n  }\n}\n\nexport const setItem = (key, value) => {\n  const store = getItems();\n  localStorage.setItem(`DATA`,\n      JSON.stringify(Object.assign({}, store, {[key]: value}))\n  );\n}\n\nexport const setItems= (items)=> {\n  localStorage.setItem(\n      `DATA`,\n      JSON.stringify(items)\n  );\n}\n\nexport const removeItem=(key)=> {\n  const store = getItems();\n  delete store[key];\n  localStorage.setItem(`DATA`, JSON.stringify(store)\n  );\n}\n\n","import {extend, adapter, parseItemFromStorage} from './utils.js';\nimport {sessions} from './mock';\nimport {history} from \"./history.js\";\nimport {getItems, setItem, setItems, removeItem} from './local-storage';\n\nconst createStoreStructure = (items) => {\n  return items.reduce((acc, current) => {\n    return Object.assign({}, acc, {\n      [current.id]: current,\n    });\n  }, {});\n};\n\nconst storageSessions = Object.values(getItems());\nconst parsedSessionsFromStorage = storageSessions.map((session)=>parseItemFromStorage(session));\n\nconst initialState = {\n  isDataReady: false,\n  sessions: [],\n};\n\nconst ActionType = {\n  IS_DATA_READY: `IS_DATA_READY`,\n  LOAD_SESSIONS: `LOAD_SESSIONS`,\n  CREATE_SESSION: `CREATE_SESSION`,\n  EDIT_SESSION: `EDIT_SESSION`,\n  DELETE_SESSION: `DELETE_SESSION`,\n};\n\nexport const ActionCreator = {\n  setIsDataReady: (value) => ({\n    type: `IS_DATA_READY`,\n    payload: value,\n  }),  \n  loadSessions: (sessions) => ({\n    type: ActionType.LOAD_SESSIONS,\n    payload: sessions,\n  }),\n  createSession: (session) => ({\n    type: ActionType.CREATE_SESSION,\n    payload: session,\n  }), \n  editSession: (session) => ({\n    type: ActionType.EDIT_SESSION,\n    payload: session,\n  }), \n  deleteSession: (id) => ({\n    type: ActionType.DELETE_SESSION,\n    payload: id,\n  }), \n};\n\nexport const Operation = {\n  loadSessions: () => (dispatch, getState, api) => {    \n    return api.get(`/users?page=2`).then((response) => {\n      const checkSession = adapter(response.data.data)[0];\n      setItem(checkSession.id, checkSession);\n      dispatch(ActionCreator.loadSessions(adapter(response.data.data)));      \n      dispatch(ActionCreator.loadSessions(parsedSessionsFromStorage.filter((session)=>session.id!==checkSession.id)));\n      dispatch(ActionCreator.setIsDataReady(true));                \n    })\n    .catch((err) => {      \n      throw err;\n    });\n  }, \n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case ActionType.IS_DATA_READY:\n    return extend(state, {isDataReady: action.payload});\n\n  case ActionType.LOAD_SESSIONS:    \n    return extend(state, {sessions: [...state.sessions, ...action.payload]});\n\n  case ActionType.CREATE_SESSION:       \n    setItem(action.payload.id, action.payload); //storage    \n    history.goBack(); \n    return extend(state, {sessions: [...state.sessions, action.payload]});\n\n  case ActionType.EDIT_SESSION:\n      const editSession = action.payload;\n      const index = state.sessions.findIndex((session) => session.id === editSession.id);\n\n      if(index === -1){\n        return false;\n      }\n\n      const newSessions = [...state.sessions.slice(0, index), editSession, ...state.sessions.slice(index + 1)];     \n      setItems(createStoreStructure(newSessions)); //storage      \n    return extend(state, {sessions: newSessions});\n\n  case ActionType.DELETE_SESSION:\n    \n    removeItem(action.payload); //storage\n    const sessionsFiltered = state.sessions.filter((session)=>session.id!==action.payload)  \n    return extend(state, {sessions: sessionsFiltered});\n\n    default:\n      return state;\n  }\n};\n","import React, {useState} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\nimport styled from 'styled-components';\nimport {getDateFormat, getUniq} from '../utils';\nimport { connect } from 'react-redux';\nimport {ActionCreator} from '../reducer';\n\nconst EditSession = (props) => {\n  const {\n    buttonLabel,\n    className,\n    session,\n    editSession,\n    deleteSession,\n    sessions\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  const [distance, setDistance] = useState(session.distance);\n  const [comment, setComment] = useState(session.comment);\n  const [date, setDate] = useState(session.date);\n  const [type, setType] = useState(session.type);\n  const [isDeleting, setDeleting] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onChangeDistance = (e) => {    \n    setDistance(e.target.value);\n  }\n\n  const onChangeDate = (e) => {    \n    setDate(new Date(e.target.value));\n  }\n\n  const onChangeComment = (e) => {    \n    setComment(e.target.value);\n  }\n\n  const onChangeType = (e) => {    \n    setType(e.target.value);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(isDeleting){      \n      deleteSession(session.id);\n      return;\n    }\n\n    editSession({\n      id: session.id,      \n      comment, date, distance, type\n    });\n  }\n\n  const onDeleting = () => {\n    setDeleting(true);\n    toggle();\n  }\n\n  return (\n    <div>\n      <Button color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Информация о тренировке: #{session.id} {session.type}</ModalHeader>\n        <ModalBody>                 \n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Тип тренировки</Label>\n              <Input \n                type=\"select\" \n                name=\"type\" \n                id=\"type\" \n                defaultValue={type}\n                onChange={onChangeType}>\n                {getUniq(sessions).filter((type)=>type !== `servCheck`).map((type)=>\n                <option key={type}>{type}</option>)}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"date\">Date: {getDateFormat(date)}</Label>\n              <Input\n                type=\"date\"\n                name=\"date\"\n                id=\"date\"\n                placeholder={date}\n                defaultValue={date}\n                onChange={onChangeDate}                            \n              />\n            </FormGroup>            \n            <FormGroup>\n              <Label for=\"distance\">Distance:</Label>\n              <Input type=\"number\" name=\"distance\" id=\"distance\" placeholder=\"distance\" \n              defaultValue={distance} onChange={onChangeDistance}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"comment\">Comment:</Label>\n              <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n              defaultValue={comment} onChange={onChangeComment}\n              />\n            </FormGroup>\n            <Button style={{marginLeft: `10px`}} type=\"submit\" color=\"success\" onClick={toggle}>Изменить</Button>\n            <Button style={{marginLeft: `10px`}} type=\"submit\" color=\"danger\" onClick={onDeleting}>Удалить</Button>\n            <Button style={{marginLeft: `10px`}} color=\"secondary\" onClick={toggle}>Cancel</Button>        \n          </Form>\n        </ModalBody>       \n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sessions: state.SESSIONS.sessions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  editSession(session) {\n    dispatch(ActionCreator.editSession(session));\n  },\n  deleteSession(id) {\n    dispatch(ActionCreator.deleteSession(id));\n  },\n});\n\nexport {EditSession};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditSession);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport EditSession from './edit-delete-session';\nimport {getDateFormat} from '../utils';\n\nconst Session = styled.li`\n  display: flex;\n  justify-content: space-between;  \n  min-height: 50px;\n  margin: 5px 0; \n  padding: 10px;\n  text-align: left;  \n  \n  color: ${props=>props.theme.secondary};\n  background-color: white;\n  \n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n\n  &:hover{\n    background-color: lightgrey;    \n  }\n`;\n\nconst Type = styled.p`\n  width: 25%;  \n  display: inline-block;  \n  margin: 0;  \n  border-radius: 5px;\n  color: black;  \n`;\n\nconst Date = styled.span`\n  display:block;  \n  width: 30%;\n  height: 17px;  \n  border-radius: 5px; \n  color: black;   \n`;\n\nconst Distance = styled(Type)`\n  width: 15%;\n`;\n\nconst Info = styled.div` \n  width: 30%;\n  text-align: center; \n`;\n\nexport default ({session, togglePopupHandler}) => {\n  return (\n    <Session>      \n      <Type>{session.type}</Type>\n      <Date>{getDateFormat(session.date)}</Date>\n      <Distance>{session.distance}km</Distance>\n      <Info onClick={()=>togglePopupHandler(session.id)}>        \n        <EditSession session={session} buttonLabel={`Подробнее`}/>\n      </Info>\n    </Session>\n  );\n};\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Session from './session';\n\nconst List = styled.ul`\n  margin:0;\n  padding:0;\n  list-style: none;\n`;\n\nconst Sessions = (props) => {\n  const {sessions} = props;\n  const [showPopup, setShowPopup] = useState(false);\n  const [currentId, setCurrentId] = useState(0);\n  \n  const togglePopup = (id) => {\n    setShowPopup(!showPopup);\n    setCurrentId(id);\n  };\n\n  return (\n    <List>\n    {sessions.map((session)=><Session \n      key={session.id}\n      session={session}\n      togglePopupHandler = {togglePopup}\n      />)}       \n  </List>\n  );\n};\n\nexport default Sessions;\n\n// {showPopup && <Form currentId={currentId} sessions={sessions} togglePopupHandler = {()=>togglePopup(currentId)}/>}\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {getUniq} from '../utils';\n\nconst Select = styled.select`\n  margin-left: 10px;\n  border-radius: 5px;\n\n\n  @media (max-width: ${props=>props.theme.mobile}){\n    margin-top: 25px;\n    margin-left: 0;\n  }  \n`;\n\nconst List = styled.ul`\n  display: flex;  \n  width: 100%;\n  margin: 0px;  \n  padding: 10px;\n  box-sizing: border-box;\n  font-size: 18px;\n  font-weight: bold;\n  list-style: none;\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n`;\n\nconst Item = styled.li`\n  width: ${props=>props.width}%;  \n  color: grey;\n  cursor: pointer;\n  text-align: left;  \n\n  &:hover{\n    color: ${props=>props.theme.primary};\n  }\n\n  &:active{\n    color: ${props=>props.theme.secondary}\n  }\n`;\n\nexport default ({toggleSortUp, sessions, filterType, setFilterType}) => {\n  const [isShowing, setShowing] = useState(false);\n\n  const a = true;\n\n  return (\n    <List>          \n      <Item width={25} onClick={()=>setShowing(!isShowing)}>Type &rsaquo;\n      {isShowing&&\n        <Select value={filterType} onClick={(e)=>{e.stopPropagation()}} onChange={(e)=>{setFilterType(e.target.value)}}>\n          <option>Все</option>\n            {getUniq(sessions).map((type)=><option key={type}>{type}</option>)}\n        </Select>\n      }\n      </Item>\n    <Item width={30} onClick={toggleSortUp}>Date &uarr;&darr;</Item>\n      <Item width={35} onClick={toggleSortUp}>Distance &uarr;&darr;</Item>      \n    </List>\n  );\n};\n","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {getDateFormat} from '../utils';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  width: 50%;\n  margin: 0 auto;\n  padding: 10px;\n\n  @media (max-width: ${props=>props.theme.mobile}){\n    width: 100%;\n  }\n`;\n\nexport default ({filteredSessions})=>{\n  const state = {\n    labels: filteredSessions.map((session)=>getDateFormat(session.date)),\n    datasets: [\n      { \n        barPercentage: 1,         \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: filteredSessions.map((session)=>session.distance),        \n      }\n    ]\n  };\n  return (\n    <Wrapper>\n      <Bar       \n      data={state}\n      options={{\n        title:{\n          display: true,\n          text:'Статистика по километражу',\n          fontSize: 20\n        },\n        legend:{\n          display:false, \n        },        \n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,              \n            },            \n          }],          \n        }\n      }}\n    />\n    </Wrapper>\n  );\n};\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Sessions from './sessions';\nimport Filter from './filter';\nimport Chart from './chart';\nimport {Link} from 'react-router-dom';\nimport {sort, SortType} from '../utils';\n\n\nconst Wrapper = styled.main`\n  text-align: center;\n  font-family: ${props=>props.theme.font}; \n  background-color: white; \n`;\n\nconst Button = styled.button`\n  position: fixed;  \n  z-index: 1;\n  bottom: 20px;\n  right: 30px;\n  display: block;\n  width: 100px;\n  height: 100px;\n  font-size: 50px;\n  background-color: ${props=>props.theme.pink};\n  outline: none;\n  border: none;\n  color: white;\n  border-radius: 50%;  \n  transition: 0.5s transform ease;\n\n  &:hover{\n    transform: scale(1.5);\n  }\n\n  &:active{\n    background-color: grey;\n  }\n`;\n\nconst Main = ({sessions}) => {\n\n  const [sortUp, setSortUp] = useState(true);\n \n  const [sortTarget, setSortTarget] = useState(`date`);\n\n  const [filterType, setFilterType] = useState(`Все`);\n\n  let filteredSessions;\n\n  if(filterType === `Все`){\n    \n    filteredSessions = sessions;\n  } else {\n    filteredSessions = sessions.filter((session)=> session.type===filterType);\n  }\n\n  const toggleSortUp = (e) => {\n    const target = e.target.textContent.toLowerCase();    \n    setSortUp(!sortUp);\n    setSortTarget(target);\n  };\n\n  const getSortedSessions = (sortTarget, sortUp) => {\n    if(sortTarget === \"date\" || sortTarget === \"type\"){\n      return  sortUp ? sort(SortType.DATE_UP, sessions) : sort(SortType.DATE_DOWN, sessions);\n    }\n    return  sortUp ? sort(SortType.DISTANCE_UP, sessions) : sort(SortType.DISTANCE_DOWN, sessions);\n  };\n\n  getSortedSessions(sortTarget, sortUp);  \n  \n  return (\n    <Wrapper>\n      <h1 style={{display: `none`}}>BestRunner</h1>\n      <Filter toggleSortUp={toggleSortUp} sessions = {sessions} filterType={filterType} setFilterType={setFilterType}/>\n      <Sessions sessions = {filteredSessions}/>\n      <Chart filteredSessions={filteredSessions}/>      \n      <Link to=\"/new\">\n        <Button>+</Button>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.footer` \n  text-align: center;\n  font-family: ${props=>props.theme.font};\n  background-color: ${props=>props.theme.primary};\n  color: white;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;  \n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  @media (max-width:${props=>props.theme.mobile}){\n    flex-direction: column;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 10px;\n  cursor: pointer;  \n`;\n\nconst LinkItem = styled.a`\n  color: white;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <List>\n        <Item>\n          <LinkItem href=\"https://wa.me/+79264915349\">[Copyright]</LinkItem>\n        </Item>\n        <Item>\n          <LinkItem href=\"https://wa.me/+79264915349\">[Контакты]</LinkItem>\n        </Item>\n        <Item>\n          <LinkItem href=\"https://wa.me/+79264915349\">[Обратная связь]</LinkItem>\n        </Item>\n      </List>\n    </Wrapper>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {getRandomInt} from '../utils';\n \nconst Wrapper = styled.div`\n  width: 80%;\n  margin: 10px auto;\n`;\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      id: 100,\n      type: `Велосипед`,\n      distance: ``,\n      comment: ``,\n      date: ``,\n    };\n    this._changeHandler = this._changeHandler.bind(this);\n    this._submitHandler = this._submitHandler.bind(this);    \n  }\n\n  _submitHandler(e){\n    e.preventDefault();\n    this.props.createSession({\n      id: getRandomInt(1,100),\n      type: this.state.type,\n      distance: this.state.distance,\n      comment: this.state.comment,\n      date: new Date (this.state.date),\n    })    \n  }\n\n  _changeHandler(e){\n    const name= e.target.name;    \n    this.setState({\n      [name]: e.target.value,\n    })    \n  }\n\n  render() {    \n    return (\n      <Wrapper>\n        <Link to=\"/\">Вернуться назад</Link>\n        <h2>Новая тренировка</h2>\n        <Form onSubmit={this._submitHandler}>\n          <FormGroup>\n            <Label for=\"type\">Type</Label>\n            <Input type=\"select\" name=\"type\" id=\"type\" defaultValue={this.state.type} onChange={this._changeHandler}>\n              <option>Велосипед</option>\n              <option>Бег</option>\n              <option>Лыжи</option>\n              <option>Плавание</option>\n              <option>Ходьба</option>\n            </Input>\n          </FormGroup>          \n          <FormGroup>\n            <Label for=\"distance\">Distance, km</Label>\n            <Input type=\"number\" min=\"0\" name=\"distance\" id=\"distance\" placeholder=\"distance\" required\n            value={this.state.distance} onChange={this._changeHandler}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleDate\">Date</Label>\n            <Input\n              type=\"date\"\n              name=\"date\"\n              id=\"exampleDate\"\n              placeholder=\"date placeholder\"\n              value={this.state.date}\n              onChange={this._changeHandler}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"comment\">Comment</Label>\n            <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n            value={this.state.comment} onChange={this._changeHandler}\n            />\n          </FormGroup>\n          <Button color=\"success\">Добавить тренировку</Button>\n        </Form>\n      </Wrapper>\n    );\n  }\n};\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport default (props) => {\n  return (\n    <div>\n      <Spinner type=\"grow\" color=\"primary\" />\n      <p>Loading...</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport Header from './header';\nimport Main from './main'\nimport Footer from './footer';\nimport CreateSession from './create-session';\nimport Preloader from './preloader';\nimport { connect } from 'react-redux';\nimport {ActionCreator, Operation} from '../reducer';\nimport {history} from '../history.js';\n\nconst theme = {\n  primary: `#3B5AF5`,\n  secondary: `tomato`,\n  pink: `#F9057C`,\n  bgc: `white`,\n  mobile: `660px`,\n  font: `Poppins`,\n};\n\nconst App = (props) => {\n  const {isDataReady, sessions, createSession} = props;  \n  if (!isDataReady) {\n    return <Preloader/>;\n  }\n  \n  return (\n    <HashRouter history={history}>\n    <ThemeProvider theme={theme}>      \n        <Header/>\n        <Route exact path=\"/\">\n          <Main sessions = {sessions}/>\n        </Route>\n        <Route exact path=\"/new\">\n          <CreateSession createSession={createSession}/>\n        </Route>        \n        <Footer/>      \n    </ThemeProvider>\n    </HashRouter>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isDataReady: state.SESSIONS.isDataReady,\n  sessions: state.SESSIONS.sessions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createSession(newSession) {\n    dispatch(ActionCreator.createSession(newSession));\n  },\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: `https://reqres.in/api`,\n  timeout: 1000 * 5,\n  withCredentials: false,\n});\n","import {combineReducers} from \"redux\";\nimport {reducer} from \"./reducer.js\";\n\nexport const reducers = combineReducers({\n  SESSIONS: reducer,  \n}); \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport {api} from './api.js';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducers} from \"./reducers.js\";\nimport {ActionCreator, Operation} from './reducer';\nimport {getItems, setItem, setItems, removeItem} from './local-storage';\n\n// localStorage.clear();\n\nconst store = createStore(\n  reducers, compose(\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nconst localStorageSessions = [{\n  id: 41,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 8,\n  comment: `heyLocal`,\n},{\n  id: 42,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 9,\n  comment: `howLocal`,\n},{\n  id: 43,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 10,\n  comment: `areLocal`,\n}];\n\nstore.dispatch(Operation.loadSessions());\n// store.dispatch(ActionCreator.loadSessions(localStorageSessions));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}