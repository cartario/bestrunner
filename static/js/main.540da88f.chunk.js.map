{"version":3,"sources":["components/header.jsx","components/session.jsx","components/form.jsx","components/sessions.jsx","components/filter.jsx","components/chart.jsx","components/main.jsx","components/footer.jsx","utils.js","components/create-session.jsx","components/preloader.jsx","mock.js","history.js","reducer.js","components/app.jsx","serviceWorker.js","api.js","reducers.js","index.js"],"names":["Wrapper","styled","header","props","theme","font","Nav","nav","primary","Logo","div","secondary","mobile","Menu","Header","Session","li","Date","span","Type","p","Distance","Info","mock","togglePopupHandler","type","date","getFullYear","distance","onClick","id","width","src","Inner","Form","state","isDeleting","isShowing","this","setState","sessions","currentId","currentSession","find","session","onSubmit","href","placeholder","React","Component","List","ul","Sessions","useState","showPopup","setShowPopup","setCurrentId","console","log","togglePopup","map","key","Item","style","margin","padding","minHeight","data","labels","datasets","barPercentage","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","main","Button","button","pink","Main","to","footer","Footer","extend","oldData","newData","Object","assign","comment","_changeHandler","bind","_submitHandler","e","min","max","preventDefault","createSession","Math","floor","random","name","target","value","FormGroup","Label","for","Input","defaultValue","onChange","required","color","Spinner","history","createBrowserHistory","initialState","isDataReady","ActionType","ActionCreator","payload","Operation","dispatch","getState","api","get","then","response","catch","err","bgc","connect","SESSIONS","newSession","exact","path","Boolean","window","location","hostname","match","axios","create","baseURL","timeout","withCredentials","reducers","combineReducers","action","goBack","store","createStore","compose","applyMiddleware","thunkMiddleware","withExtraArgument","__REDUX_DEVTOOLS_EXTENSION__","f","localStorageSessions","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.540da88f.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.header`  \n  text-align: center;\n  font-family: ${props=>props.theme.font};  \n`;\n\nconst Nav = styled.nav`\n  display: flex;  \n  color: white; \n  cursor: pointer; \n  background-color: ${props=>props.theme.primary};  \n\n  \n`;\n\nconst Logo = styled.div`\n  width: 10%;\n  padding: 10px;\n  border: 1px solid white;  \n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n  \n  @media (max-width: ${props=>props.theme.mobile}) {\n    display: none;    \n`;\n\nconst Menu = styled.div`\n  width: 90%;\n  padding: 10px;\n  font-weight: bold;\n  border: 1px solid white;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n    \n  @media (max-width: ${props=>props.theme.mobile}){\n    width: 100%;\n    padding: 20px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Nav>\n        <Logo>[Logo]</Logo>\n        <Menu>[BEST RUNNER]</Menu>\n      </Nav>\n    </Wrapper>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Session = styled.li`\n  display: flex;\n  justify-content: space-between;  \n  max-height: 50px;\n  margin: 5px 0; \n  padding: 10px;\n  text-align: left;  \n  \n  color: ${props=>props.theme.secondary};\n  background-color: white;\n  \n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n\n  &:hover{\n    background-color: lightgrey;    \n  }\n`;\n\nconst Date = styled.span`\n  display:block;  \n  width: 15%;\n  height: 17px;\n  \n  border-radius: 5px; \n  color: black;   \n`;\n\nconst Type = styled.p`\n  width: 40%;\n  height: 50px;\n  display: inline-block;  \n  margin: 0;  \n  \n  border-radius: 5px;\n  color: black;  \n`;\n\nconst Distance = styled(Type)`\n  width: 30%;\n`;\n\nconst Info = styled.div` \n  width: 15%;\n`;\n\nexport default ({mock, togglePopupHandler}) => {\n  return (\n    <Session>      \n      <Type>{mock.type}</Type>\n      <Date>{mock.date.getFullYear()}</Date>\n      <Distance>{mock.distance}km</Distance>\n      <Info onClick={()=>togglePopupHandler(mock.id)}>\n        <img width=\"15\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/Info_Simple_bw.svg/768px-Info_Simple_bw.svg.png\"/>\n      </Info>\n    </Session>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  background-color: rgba(0,0,0, 0.5);\n`;\n\nconst Inner = styled.div`\n  position: absolute;\n  left: 25%;\n  right: 25%;\n  top: 25%;\n  bottom: 25%;\n  margin: auto;\n  background: white;\n`;\n\nclass Form extends React.Component { \n  constructor(props){\n    super(props);\n\n    this.state={\n      isDeleting: false,\n      isShowing: false,\n    };\n  }\n\n  _toggleEditDeleting(){\n    this.setState({\n      isDeleting: !this.state.isDeleting,\n    })\n  }\n  \n  render (){\n    const {sessions, currentId, togglePopupHandler} = this.props;\n    const currentSession = sessions.find((session)=>session.id===currentId);  \n  \n    return (      \n      <Wrapper>\n        <Inner>\n          <form onSubmit={togglePopupHandler}>\n            <h2>{currentSession.type}</h2>\n            <a href=\"#\" onClick={togglePopupHandler}>Go-back</a>\n            <p>{currentSession.date.getFullYear()}</p>\n            <p>{currentSession.distance}</p>\n            <textarea placeholder=\"comment\"></textarea>              \n\n            {!this.state.isShowing &&\n            <button onClick={()=>{return this.setState({isShowing: true, isDeleting:true})}}>delete</button>\n            }\n\n            {!this.state.isShowing &&\n            <button onClick={()=>{return this.setState({isShowing: true, isDeleting:false})}}>Edit</button>\n            }\n\n            {this.state.isShowing &&\n            <button onClick={()=>{return this.setState({isShowing: false, isDeleting:false})}}>Вернуться</button>\n            }            \n\n            {this.state.isShowing&&<button type=\"submit\">{this.state.isDeleting ? `Правда удалить?`:`Внести изменения`}</button>}\n                  \n          </form>\n        </Inner>\n      </Wrapper>\n    );\n  }\n};\n\nexport default Form;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport Session from './session';\nimport Form from './form';\n\nconst List = styled.ul`\n  margin:0;\n  padding:0;\n  list-style: none;\n`;\n\nconst Sessions = (props) => {\n  const {sessions} = props;\n  const [showPopup, setShowPopup] = useState(false);\n  const [currentId, setCurrentId] = useState(0);\n  console.log(sessions);\n\n  const togglePopup = (id) => {\n    setShowPopup(!showPopup);\n    setCurrentId(id);\n  };\n\n  return (\n    <List>\n    {sessions.map((session)=><Session \n      key={session.id}\n      mock={session}\n      togglePopupHandler = {togglePopup}\n      />)}\n\n      {showPopup && <Form currentId={currentId} sessions={sessions} togglePopupHandler = {()=>togglePopup(currentId)}/>}\n  </List>\n  );\n};\n\nexport default Sessions;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;  \n  width: 100%;\n  margin: 0px;  \n  padding: 10px;\n  box-sizing: border-box;\n  font-size: 18px;\n  font-weight: bold;\n  list-style: none;\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); \n`;\n\nconst Item = styled.li`\n  width: ${props=>props.width}%;  \n  color: grey;\n  cursor: pointer;\n  text-align: left;  \n\n  &:hover{\n    color: ${props=>props.theme.primary};\n  }\n\n  &:active{\n    color: ${props=>props.theme.secondary}\n  }\n`;\n\nexport default (props) => {\n  return (\n    <List>      \n      <Item width={40}>Type</Item>\n      <Item width={15}>Date</Item>\n      <Item width={15}>Distance</Item>      \n    </List>\n  );\n};\n","import React from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nexport default (props)=>{\n\n\n  const state = {\n    labels: [`timeWork`,`timeFlight`,`timeBlock`,`timeNight`,`timeBiologicalNight`],\n    datasets: [\n      { \n        barPercentage: 0.5,         \n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 1,\n        data: [1,2,3,4,5],\n      }\n    ]\n  };\n  return (\n    <section \n    style={{margin:0, padding: `20px`,minHeight: `280px`}}>\n      <Bar       \n      data={state}\n      options={{\n        title:{\n          display: true,\n          text:'Сводные данные за текущий период',\n          fontSize: 20\n        },\n        legend:{\n          display:false, \n        },        \n      }}\n    />\n    </section>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Sessions from './sessions';\nimport Filter from './filter';\nimport Chart from './chart';\nimport {Link} from 'react-router-dom';\n\n\nconst Wrapper = styled.main`\n  text-align: center;\n  font-family: ${props=>props.theme.font}; \n  background-color: white; \n`;\n\nconst Button = styled.button`\n  position: fixed;  \n  z-index: 1;\n  bottom: 20px;\n  right: 30px;\n  display: block;\n  width: 100px;\n  height: 100px;\n  font-size: 50px;\n  background-color: ${props=>props.theme.pink};\n  outline: none;\n  border: none;\n  color: white;\n  border-radius: 50%;  \n  transition: 0.5s transform ease;\n\n  &:hover{\n    transform: scale(1.5);\n  }\n\n  &:active{\n    background-color: grey;\n  }\n`;\n\nconst Main = ({sessions}) => {\n  \n  return (\n    <Wrapper>\n      <h1 style={{display: `none`}}>BestRunner</h1>\n      <Filter/>\n      <Sessions sessions = {sessions}/>\n      <Chart/>      \n      <Link to=\"/new\">\n        <Button onClick={()=>console.log(`plus`)}>+</Button>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.footer` \n  text-align: center;\n  font-family: ${props=>props.theme.font};\n  background-color: ${props=>props.theme.primary};\n  color: white;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;  \n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  @media (max-width:${props=>props.theme.mobile}){\n    flex-direction: column;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover{\n    color: ${props=>props.theme.secondary};\n  }\n\n  &:active{\n    color: white;\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <List>\n        <Item>[Copyright]</Item>\n        <Item>[Социальные сети]</Item>\n        <Item>[Адрес]</Item>\n      </List>\n    </Wrapper>\n  );\n}\n\nexport default Footer;\n","export const extend = (oldData, newData) => {\n  return Object.assign({}, oldData, newData);\n};\n\nexport const adapter = (data) => {\n  return [{  \n    id: data[0].id,  \n    type: `servCheck`,\n    date: new Date(),\n    distance: 101, \n  }];\n};\n\nexport const getRandomInt = (min, max)=> {  \n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {getRandomInt} from '../utils';\n \nconst Wrapper = styled.div`\n  width: 80%;\n  margin: 10px auto;\n`;\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      id: 100,\n      type: `Велосипед`,\n      distance: ``,\n      comment: ``,\n      date: new Date(),\n    };\n    this._changeHandler = this._changeHandler.bind(this);\n    this._submitHandler = this._submitHandler.bind(this);    \n  }\n\n  _submitHandler(e){\n    e.preventDefault();\n    this.props.createSession({\n      id: getRandomInt(1,100),\n      type: this.state.type,\n      distance: this.state.distance,\n      comment: this.state.comment,\n      date: new Date(),\n    })    \n  }\n\n  _changeHandler(e){\n    const name= e.target.name;    \n    this.setState({\n      [name]: e.target.value,\n    })    \n  }\n\n  render() {    \n    return (\n      <Wrapper>\n        <Link to=\"/\">Вернуться назад</Link>\n        <h2>Новая тренировка</h2>\n        <Form onSubmit={this._submitHandler}>\n          <FormGroup>\n            <Label for=\"type\">Type</Label>\n            <Input type=\"select\" name=\"type\" id=\"type\" defaultValue={this.state.type} onChange={this._changeHandler}>\n              <option>Велосипед</option>\n              <option>Бег</option>\n              <option>Лыжи</option>\n              <option>Плавание</option>\n              <option>Ходьба</option>\n            </Input>\n          </FormGroup>          \n          <FormGroup>\n            <Label for=\"distance\">Distance, km</Label>\n            <Input type=\"number\" min=\"0\" name=\"distance\" id=\"distance\" placeholder=\"distance\" required\n            value={this.state.distance} onChange={this._changeHandler}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleDate\">Date</Label>\n            <Input\n              type=\"date\"\n              name=\"date\"\n              id=\"exampleDate\"\n              placeholder=\"date placeholder\"\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"comment\">Comment</Label>\n            <Input type=\"textarea\" name=\"comment\" id=\"comment\" \n            value={this.state.comment} onChange={this._changeHandler}\n            />\n          </FormGroup>\n          <Button color=\"success\">Добавить тренировку</Button>\n        </Form>\n      </Wrapper>\n    );\n  }\n};\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport default (props) => {\n  return (\n    <div>\n      <Spinner type=\"grow\" color=\"primary\" />\n      <p>Loading...</p>\n    </div>\n  );\n};\n","export const sessions = [\n  {\n    id: 1,\n    type: `Велосипед`,\n    date: new Date(),\n    distance: 10,\n  },\n  {\n    id: 2,\n    type: `Бег`,\n    date: new Date(),\n    distance: 15,\n  },\n  {\n    id: 3,\n    type: `Лыжи`,\n    date: new Date(),\n    distance: 5,\n  },\n  {\n    id: 4,\n    type: `Плавание`,\n    date: new Date(),\n    distance: 7,\n  },\n  {\n    id: 5,\n    type: `Ходьба`,\n    date: new Date(),\n    distance: 11,\n  }\n];\n","import {createBrowserHistory} from \"history\";\n\nexport const history = createBrowserHistory();\n","import {extend, adapter} from './utils.js';\nimport {sessions} from './mock';\nimport {history} from \"./history.js\";\n\nconst initialState = {\n  isDataReady: false,\n  sessions: [],\n};\n\nconst ActionType = {\n  IS_DATA_READY: `IS_DATA_READY`,\n  LOAD_SESSIONS: `LOAD_SESSIONS`,\n  CREATE_SESSION: `CREATE_SESSION`,\n};\n\nexport const ActionCreator = {\n  setIsDataReady: (value) => ({\n    type: `IS_DATA_READY`,\n    payload: value,\n  }),  \n  loadSessions: (sessions) => ({\n    type: ActionType.LOAD_SESSIONS,\n    payload: sessions,\n  }),\n  createSession: (session) => ({\n    type: ActionType.CREATE_SESSION,\n    payload: session,\n  }), \n};\n\nexport const Operation = {\n  loadSessions: () => (dispatch, getState, api) => {    \n    return api.get(`/users?page=2`).then((response) => {          \n      dispatch(ActionCreator.loadSessions(adapter(response.data.data)));\n      dispatch(ActionCreator.setIsDataReady(true));\n                \n    })\n    .catch((err) => {      \n      throw err;\n    });\n  }, \n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case ActionType.IS_DATA_READY:\n    return extend(state, {isDataReady: action.payload});\n\n  case ActionType.LOAD_SESSIONS:\n    return extend(state, {sessions: [...state.sessions, ...action.payload]});\n\n  case ActionType.CREATE_SESSION:\n    history.goBack(); \n    return extend(state, {sessions: [...state.sessions, action.payload]});\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport Header from './header';\nimport Main from './main'\nimport Footer from './footer';\nimport CreateSession from './create-session';\nimport Preloader from './preloader';\nimport { connect } from 'react-redux';\nimport {ActionCreator, Operation} from '../reducer';\nimport {history} from '../history.js';\n\nconst theme = {\n  primary: `#3B5AF5`,\n  secondary: `tomato`,\n  pink: `#F9057C`,\n  bgc: `white`,\n  mobile: `660px`,\n  font: `Poppins`,\n};\n\nconst App = (props) => {\n  const {isDataReady, sessions, createSession} = props;  \n  if (!isDataReady) {\n    return <Preloader/>;\n  }\n\n  return (\n    <HashRouter history={history}>\n    <ThemeProvider theme={theme}>      \n        <Header/>\n        <Route exact path=\"/\">\n          <Main sessions = {sessions}/>\n        </Route>\n        <Route exact path=\"/new\">\n          <CreateSession createSession={createSession}/>\n        </Route>        \n        <Footer/>      \n    </ThemeProvider>\n    </HashRouter>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isDataReady: state.SESSIONS.isDataReady,\n  sessions: state.SESSIONS.sessions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createSession(newSession) {\n    dispatch(ActionCreator.createSession(newSession));\n  },\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: `https://reqres.in/api`,\n  timeout: 1000 * 5,\n  withCredentials: false,\n});\n","import {combineReducers} from \"redux\";\nimport {reducer} from \"./reducer.js\";\n\nexport const reducers = combineReducers({\n  SESSIONS: reducer,  \n}); \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport {api} from './api.js';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducers} from \"./reducers.js\";\nimport {ActionCreator, Operation} from './reducer';\n\nconst store = createStore(\n  reducers, compose(\n      applyMiddleware(thunkMiddleware.withExtraArgument(api)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\n  )\n);\n\nconst localStorageSessions = [{\n  id: 41,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 8,\n},{\n  id: 42,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 9,\n},{\n  id: 43,\n  type: `Плавание`,\n  date: new Date(),\n  distance: 10,\n}];\n\nstore.dispatch(Operation.loadSessions());\nstore.dispatch(ActionCreator.loadSessions(localStorageSessions));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}